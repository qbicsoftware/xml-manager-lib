//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.08.03 at 02:15:07 PM CEST 
//


package life.qbic.xml.study;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

import org.apache.commons.lang3.tuple.Pair;

import life.qbic.xml.manager.StudyXMLParser;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="qcontlevel" maxOccurs="unbounded">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 &lt;sequence>
 *                   &lt;element name="entity_id" type="{http://www.w3.org/2001/XMLSchema}string" maxOccurs="unbounded"/>
 *                 &lt;/sequence>
 *                 &lt;attribute name="value" use="required" type="{http://www.w3.org/2001/XMLSchema}double" />
 *               &lt;/restriction>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *       &lt;/sequence>
 *       &lt;attribute name="label" use="required" type="{}variable_name_format" />
 *       &lt;attribute name="unit" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "qcontlevel"
})
public class Qcontinuous {

    @XmlElement(required = true)
    protected List<Qcontlevel> qcontlevel;
    @XmlAttribute(name = "label", required = true)
    protected String label;
    @XmlAttribute(name = "unit", required = true)
    protected String unit;

    /**
     * Gets the value of the qcontlevel property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the qcontlevel property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getQcontlevel().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Qcontlevel }
     * 
     * 
     */
    public List<Qcontlevel> getQcontlevel() {
        if (qcontlevel == null) {
            qcontlevel = new ArrayList<Qcontlevel>();
        }
        return this.qcontlevel;
    }

    /**
     * Gets the value of the label property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getLabel() {
        return label;
    }

    /**
     * Sets the value of the label property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLabel(String value) {
        this.label = value;
    }

    /**
     * Gets the value of the unit property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getUnit() {
        return unit;
    }

    /**
     * Sets the value of the unit property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setUnit(String value) {
        this.unit = value;
    }

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((label == null) ? 0 : label.hashCode());
		result = prime * result + ((qcontlevel == null) ? 0 : qcontlevel.hashCode());
		result = prime * result + ((unit == null) ? 0 : unit.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Qcontinuous other = (Qcontinuous) obj;
		if (label == null) {
			if (other.label != null)
				return false;
		} else if (!label.equals(other.label))
			return false;
		if (qcontlevel == null) {
			if (other.qcontlevel != null)
				return false;
		} else if (!qcontlevel.equals(other.qcontlevel))
			return false;
		if (unit == null) {
			if (other.unit != null)
				return false;
		} else if (!unit.equals(other.unit))
			return false;
		return true;
	}

	public Qcontlevel getLevelOrNull(String value) {
			for (Qcontlevel level : getQcontlevel()) {
				if (level.getValue().equals(value)) {
					return level;
				}
			}
			return null;
		}

	public void createLevels(Map<Pair<String, String>, List<String>> levels) {
		for (Pair<String, String> valunit : levels.keySet()) {
			createLevel(valunit.getLeft(), levels.get(valunit));
		}
	}

	private void createLevel(String value, List<String> ids) {
		Qcontlevel contLvl = StudyXMLParser.factory.createQcontlevel();
		contLvl.setValue(value);
		contLvl.getEntityId().addAll(ids);
		getQcontlevel().add(contLvl);
	}

	public void update(Map<Pair<String, String>, List<String>> levels) {
		for (Pair<String, String> level : levels.keySet()) {
			List<String> ids = levels.get(level);
			String value = level.getLeft();

			Qcontlevel xmlLevel = getLevelOrNull(value);
			if (xmlLevel == null) {
				// if level exists, add all new identifiers on this level to the set, if not create it and also set value
				createLevel(value, ids);
			} else {
				xmlLevel.getEntityId().addAll(ids);
			}
		}
	}
}
